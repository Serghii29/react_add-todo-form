{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setName","setTitle","prepareTodo","setPrepareTodo","isAdded","setAdded","isVisibleTitle","length","isVisibleSelect","action","method","onSubmit","event","preventDefault","person","Math","max","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4013e098.chunk.js","sourcesContent":["import React from 'react';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\n\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [prepareTodo, setPrepareTodo] = useState(todos);\n  const [isAdded, setAdded] = useState(false);\n\n  const isVisibleTitle = title.length === 0\n    && isAdded;\n\n  const isVisibleSelect = name.length === 0\n    && isAdded;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const person = usersFromServer.find(user => user.name === name);\n\n          setAdded(true);\n\n          if (!person || !title || !name) {\n            return;\n          }\n\n          setPrepareTodo([...prepareTodo, {\n            id: Math.max(...prepareTodo.map(todo => todo.id)) + 1,\n            userId: person.id,\n            title,\n            completed: false,\n            user: person,\n          }]);\n\n          setAdded(false);\n          setName('');\n          setTitle('');\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={(event) => (\n              setTitle(event.target.value)\n            )}\n          />\n\n          {isVisibleTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={name}\n            onChange={event => (\n              setName(event.target.value)\n            )}\n          >\n            <option\n              value=\"\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isVisibleSelect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={prepareTodo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}